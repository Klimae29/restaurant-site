---
// src/components/DishCarousel.astro - Version simplifi√©e utilisant directement dishes.js
import { dishes } from '../data/dishes.js';
---

<section class="dish-carousel-section overflow-hidden" style="padding-top: 0; margin-top: 0;">
  <!-- Header simple avec contr√¥le pr√©cis de l'espacement -->
  <div class="header-section text-center" style="padding-top: 2rem; margin-bottom: 1rem;">
    <h2 class="dish-carousel-title font-heading mb-4">
      Nuestros Platos
    </h2>
    <div class="dish-carousel-divider mx-auto"></div>
  </div>

  <!-- Carousel d√©filant -->
  <div class="relative">
    <div class="carousel-track flex gap-0 animate-scroll">
      <!-- Premier set d'images -->
      {dishes.map((dish) => (
        <div
          class="dish-slide flex-none w-80 h-64 relative cursor-pointer group overflow-hidden"
          data-dish-id={dish.id}
          data-dish-name={dish.name}
          data-dish-description={dish.description}
          data-dish-price={dish.price}
          data-dish-country={dish.country}
          data-dish-image={dish.image}
          data-dish-category={dish.category}
          data-dish-spicy={dish.isSpicy}
          data-dish-popular={dish.isPopular}
          data-dish-prep-time={dish.preparationTime}
          data-dish-ingredients={JSON.stringify(dish.ingredients)}
        >
          <!-- Image de fond r√©elle -->
          <div class="absolute inset-0">
            <img
              src={dish.image}
              alt={`${dish.name} - ${dish.country}`}
              class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
              loading="lazy"
            />
          </div>

          <!-- Overlay sombre au hover -->
          <div class="absolute inset-0 bg-black/0 group-hover:bg-black/40 transition-all duration-300"></div>

          <!-- Titre et pays qui apparaissent au hover -->
          <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-4 group-hover:translate-y-0">
            <div class="text-center text-white px-4">
              <h3 class="font-heading text-xl font-bold mb-2 drop-shadow-lg">
                {dish.name}
              </h3>
              <p class="text-sm opacity-90 drop-shadow-md font-medium">
                {dish.country}
              </p>

              <div class="dish-hover-divider mx-auto mt-2 transform scale-0 group-hover:scale-100 transition-transform duration-300 delay-150"></div>
            </div>
          </div>

        </div>
      ))}

      <!-- Duplication pour d√©filement infini -->
      {dishes.map((dish) => (
        <div
          class="dish-slide flex-none w-80 h-64 relative cursor-pointer group overflow-hidden"
          data-dish-id={dish.id + '-duplicate'}
          data-dish-name={dish.name}
          data-dish-description={dish.description}
          data-dish-price={dish.price}
          data-dish-country={dish.country}
          data-dish-image={dish.image}
          data-dish-category={dish.category}
          data-dish-spicy={dish.isSpicy}
          data-dish-popular={dish.isPopular}
          data-dish-prep-time={dish.preparationTime}
          data-dish-ingredients={JSON.stringify(dish.ingredients)}
        >
          <!-- Image de fond r√©elle -->
          <div class="absolute inset-0">
            <img
              src={dish.image}
              alt={`${dish.name} - ${dish.country}`}
              class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
              loading="lazy"
            />
          </div>

          <!-- Overlay sombre au hover -->
          <div class="absolute inset-0 bg-black/0 group-hover:bg-black/40 transition-all duration-300"></div>

          <!-- Titre et pays qui apparaissent au hover -->
          <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-4 group-hover:translate-y-0">
            <div class="text-center text-white px-4">
              <h3 class="font-heading text-xl font-bold mb-2 drop-shadow-lg">
                {dish.name}
              </h3>
              <p class="text-sm opacity-90 drop-shadow-md font-medium">
                {dish.country}
              </p>

              <div class="dish-hover-divider mx-auto mt-2 transform scale-0 group-hover:scale-100 transition-transform duration-300 delay-150"></div>
            </div>
          </div>

        </div>
      ))}
    </div>
  </div>
</section>

<!-- Modal Zoom -->
<div id="dishModal" class="dish-modal">
  <div class="modal-content bg-white rounded-3xl max-w-2xl mx-4 transform scale-75 transition-all duration-500">
    <div class="relative">
      <!-- Bouton fermer -->
      <button
        id="closeModal"
        class="modal-close-button"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <!-- Image du plat en grand -->
      <div id="modalImage" class="w-full h-80 rounded-t-3xl overflow-hidden relative">
        <img
          id="modalImageSrc"
          src="/images/plats/plat1.webp"
          alt="Plat"
          class="w-full h-full object-cover"
        />
        <!-- Overlay l√©ger pour la lisibilit√© -->
        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>

        <!-- Badges sur l'image du modal --><!-- Les badges seront ajout√©s dynamiquement -->
      </div>

      <!-- Contenu du modal -->
      <div class="p-8">
        <div class="flex justify-between items-start mb-4">
          <div>
            <h3 id="modalTitle" class="modal-dish-title font-heading mb-2">
              Nom du plat
            </h3>
            <div class="flex items-center gap-4 mb-2">
              <p id="modalCountry" class="modal-country">
                üá¶üá∑ Pays
              </p>
              <p id="modalPrepTime" class="modal-prep-time">
                ‚è±Ô∏è 30 min
              </p>
            </div>
            <p id="modalCategory" class="modal-category">
              Cat√©gorie
            </p>
          </div>
          <span id="modalPrice" class="modal-price">
            32‚Ç¨
          </span>
        </div>

        <p id="modalDescription" class="modal-description leading-relaxed mb-4">
          Description du plat...
        </p>

        <!-- Ingr√©dients -->
        <div class="mb-6">
          <h4 class="modal-ingredients-title mb-2">Ingr√©dients :</h4>
          <div id="modalIngredients" class="flex flex-wrap gap-2">
            <!-- Les ingr√©dients seront ajout√©s dynamiquement -->
          </div>
        </div>

        <div class="flex gap-4">
          <button class="modal-order-btn flex-1">
            Commander - <span id="modalPriceBtn">32‚Ç¨</span>
          </button>
          <button id="favoriteBtn" class="modal-favorite-btn">
            ‚ù§Ô∏è
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const dishSlides = document.querySelectorAll('.dish-slide');
    const modal = document.getElementById('dishModal');
    const closeModal = document.getElementById('closeModal');
    const carouselTrack = document.querySelector('.carousel-track');

    // Animation pause/play au survol
    let isPaused = false;

    carouselTrack?.addEventListener('mouseenter', () => {
      isPaused = true;
      carouselTrack.style.animationPlayState = 'paused';
    });

    carouselTrack?.addEventListener('mouseleave', () => {
      isPaused = false;
      carouselTrack.style.animationPlayState = 'running';
    });

    // Gestion du clic sur les plats
    dishSlides.forEach(slide => {
      slide.addEventListener('click', () => {
        const dishName = slide.dataset.dishName;
        const dishDescription = slide.dataset.dishDescription;
        const dishPrice = slide.dataset.dishPrice;
        const dishCountry = slide.dataset.dishCountry;
        const dishImage = slide.dataset.dishImage;
        const dishCategory = slide.dataset.dishCategory;
        const dishSpicy = slide.dataset.dishSpicy === 'true';
        const dishPopular = slide.dataset.dishPopular === 'true';
        const dishPrepTime = slide.dataset.dishPrepTime;
        const dishIngredients = JSON.parse(slide.dataset.dishIngredients || '[]');

        // Remplir le modal avec toutes les donn√©es
        document.getElementById('modalTitle').textContent = dishName;
        document.getElementById('modalDescription').textContent = dishDescription;
        document.getElementById('modalPrice').textContent = dishPrice;
        document.getElementById('modalPriceBtn').textContent = dishPrice;
        document.getElementById('modalCountry').textContent = dishCountry;
        document.getElementById('modalCategory').textContent = dishCategory;
        document.getElementById('modalPrepTime').textContent = `‚è±Ô∏è ${dishPrepTime}`;

        // Changer l'image du modal
        const modalImageSrc = document.getElementById('modalImageSrc');
        if (modalImageSrc) {
          modalImageSrc.src = dishImage;
          modalImageSrc.alt = `${dishName} - ${dishCountry}`;
        }

        // // Ajouter les badges dans le modal
        // const modalBadges = document.getElementById('modalBadges');
        // modalBadges.innerHTML = '';

        // if (dishPopular) {
        //   const popularBadge = document.createElement('div');
        //   popularBadge.className = 'popular-badge';
        //   popularBadge.textContent = 'POPULAIRE';
        //   modalBadges.appendChild(popularBadge);
        // }

        // if (dishSpicy) {
        //   const spicyBadge = document.createElement('div');
        //   spicyBadge.className = 'spicy-badge';
        //   spicyBadge.innerHTML = 'üå∂Ô∏è √âPIC√â';
        //   modalBadges.appendChild(spicyBadge);
        // }

        // Ajouter les ingr√©dients
        const modalIngredients = document.getElementById('modalIngredients');
        modalIngredients.innerHTML = '';
        dishIngredients.forEach(ingredient => {
          const ingredientTag = document.createElement('span');
          ingredientTag.className = 'ingredient-tag';
          ingredientTag.textContent = ingredient;
          modalIngredients.appendChild(ingredientTag);
        });

        // Afficher le modal avec animation
        modal.classList.remove('opacity-0', 'pointer-events-none');
        modal.classList.add('opacity-100');

        setTimeout(() => {
          modal.querySelector('.modal-content').classList.remove('scale-75');
          modal.querySelector('.modal-content').classList.add('scale-100');
        }, 50);

        // Bloquer le scroll
        document.body.style.overflow = 'hidden';
      });
    });

    // Fermer le modal
    function closeModalFunction() {
      modal.querySelector('.modal-content').classList.remove('scale-100');
      modal.querySelector('.modal-content').classList.add('scale-75');

      setTimeout(() => {
        modal.classList.add('opacity-0', 'pointer-events-none');
        modal.classList.remove('opacity-100');
        document.body.style.overflow = 'auto';
      }, 300);
    }

    closeModal?.addEventListener('click', closeModalFunction);

    // Fermer en cliquant √† c√¥t√©
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModalFunction();
      }
    });

    // Fermer avec Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal.classList.contains('opacity-0')) {
        closeModalFunction();
      }
    });

    // Reset de l'animation quand elle se termine
    carouselTrack?.addEventListener('animationiteration', () => {
      if (!isPaused) {
        carouselTrack.style.transform = 'translateX(0)';
      }
    });
  });
</script>

<style>
  /* Section principale */
.dish-carousel-section {
  background: white;
  margin-top: 0 !important;
  padding-top: 0 !important;
}

/* Header */
.dish-carousel-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--color-primary);
}

.dish-carousel-divider {
  width: 4rem;
  height: 0.25rem;
  background-color: var(--color-accent);
}

.dish-hover-divider {
  width: 3rem;
  height: 0.125rem;
  background-color: var(--color-accent);
}

/* Modal - VERSION SANS SCROLL */
.dish-modal {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(4px);
  z-index: 50;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: all 0.5s ease;
  padding: 1rem;
  box-sizing: border-box;
}

.dish-modal.opacity-100 {
  opacity: 1;
  pointer-events: auto;
}

.dish-modal.opacity-0 {
  opacity: 0;
  pointer-events: none;
}

/* Modal content - S'ADAPTE √Ä L'√âCRAN */
.modal-content {
  max-height: 95vh;
  overflow: hidden; /* ‚úÖ Supprime le scroll */
  display: flex;
  flex-direction: column;
  transition: all 0.3s ease;
}

/* Image qui s'adapte */
#modalImage {
  height: 40vh;
  max-height: 320px;
  min-height: 200px;
  flex-shrink: 0;
  transition: height 0.3s ease;
}

/* Contenu qui s'adapte au reste de l'espace */
.modal-content > div:last-child {
  flex: 1;
  overflow: hidden;
}

.modal-content .p-8 {
  padding: 1.5rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow: hidden;
}

/* Description adapt√©e */
#modalDescription {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  line-height: 1.5;
}

/* Section ingr√©dients limit√©e */
.modal-content .mb-6 {
  flex-shrink: 0;
}

#modalIngredients {
  max-height: 100px;
  overflow: hidden;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

/* Bouton fermer */
.modal-close-button {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 10;
  width: 2.5rem;
  height: 2.5rem;
  background-color: var(--color-primary);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
}

.modal-close-button:hover {
  background-color: var(--color-secondary);
  transform: scale(1.1);
}

/* Responsive MOBILE */
@media (max-width: 768px) {
  .dish-modal {
    padding: 0.5rem;
  }

  .modal-content {
    max-height: 98vh;
    max-width: calc(100vw - 1rem);
  }

  #modalImage {
    height: 30vh;
    min-height: 150px;
  }

  .modal-content .p-8 {
    padding: 1rem;
    gap: 0.75rem;
  }

  .modal-dish-title {
    font-size: 1.5rem;
  }

  .modal-price {
    font-size: 1.5rem;
  }

  #modalDescription {
    -webkit-line-clamp: 3;
  }

  #modalIngredients {
    max-height: 80px;
  }
}

/* Responsive TR√àS PETIT √âCRAN */
@media (max-width: 375px) {
  .modal-content {
    max-height: 97vh;
    margin: 0.25rem;
  }

  #modalImage {
    height: 25vh;
    min-height: 120px;
  }

  .modal-content .p-8 {
    padding: 0.75rem;
    gap: 0.5rem;
  }

  .modal-dish-title {
    font-size: 1.25rem;
  }

  #modalDescription {
    -webkit-line-clamp: 2;
  }
}

/* Responsive GRAND √âCRAN */
@media (min-width: 1024px) {
  .modal-content {
    max-height: 85vh;
    width: 700px;
  }

  #modalImage {
    height: 350px;
  }

  .modal-content .p-8 {
    padding: 2rem;
  }
}

/* Contenu du modal - styles existants */
.modal-dish-title {
  font-size: 1.875rem;
  font-weight: 700;
  color: var(--color-neutral-dark);
}

.modal-country {
  font-size: 1.125rem;
  color: var(--color-primary);
  font-weight: 500;
}

.modal-prep-time {
  font-size: 0.875rem;
  color: var(--color-text-muted);
}

.modal-category {
  font-size: 0.875rem;
  color: var(--color-neutral-medium);
  font-weight: 500;
}

.modal-price {
  font-size: 1.875rem;
  font-weight: 700;
  color: var(--color-primary);
}

.modal-description {
  color: var(--color-neutral-medium);
}

.modal-ingredients-title {
  font-weight: 700;
  color: var(--color-neutral-dark);
}

/* Badges */
.popular-badge {
  background-color: var(--color-primary);
  color: white;
  font-size: 0.75rem;
  font-weight: 700;
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
}

.spicy-badge {
  background-color: var(--color-warning);
  color: white;
  font-size: 0.75rem;
  font-weight: 700;
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.ingredient-tag {
  background-color: var(--color-neutral-light);
  color: var(--color-neutral-dark);
  font-size: 0.75rem;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  border: 1px solid var(--color-border);
}

/* Boutons du modal */
.modal-order-btn {
  background: linear-gradient(to right, var(--color-primary), var(--color-secondary));
  color: white;
  font-weight: 700;
  padding: 1rem 1.5rem;
  border-radius: 0.75rem;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
}

.modal-order-btn:hover {
  background: linear-gradient(to right, var(--color-secondary), var(--color-warning));
  transform: scale(1.05);
}

.modal-favorite-btn {
  padding: 1rem 1.5rem;
  border: 2px solid var(--color-primary);
  color: var(--color-primary);
  border-radius: 0.75rem;
  transition: all 0.3s ease;
  background: white;
  cursor: pointer;
}

.modal-favorite-btn:hover {
  background-color: var(--color-primary);
  color: white;
  transform: scale(1.05);
}

/* Animation de d√©filement continu */
.carousel-track {
  animation: scroll-horizontal 40s linear infinite;
  width: calc(320px * 16);
}

@keyframes scroll-horizontal {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-320px * 8));
  }
}

/* Responsive carousel */
@media (max-width: 768px) {
  .dish-carousel-title {
    font-size: 2rem;
  }

  .carousel-container {
    height: 200px;
  }

  .carousel-track {
    animation-duration: 30s;
  }

  .dish-slide {
    width: 240px !important;
  }

  @keyframes scroll-horizontal {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(calc(-240px * 8), 0, 0);
    }
  }
}

/* Effet zoom sur l'image au hover */
.dish-slide {
  transition: all 0.3s ease;
}

.dish-slide:hover {
  transform: scale(1.03);
  z-index: 10;
}

/* Animation d'apparition fluide du contenu */
.dish-slide .text-center {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Effet sur l'image au hover */
.dish-slide img {
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Am√©lioration de l'accessibilit√© */
.dish-slide:focus {
  outline: 3px solid var(--color-accent);
  outline-offset: 2px;
}

/* Animation du badge prix */
.dish-slide:hover .dish-hover-divider {
  animation: bounceIn 0.6s ease-out;
}

@keyframes bounceIn {
  0% {
    transform: translateX(20px) scale(0.8);
    opacity: 0;
  }
  50% {
    transform: translateX(-5px) scale(1.1);
  }
  100% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
}
</style>
